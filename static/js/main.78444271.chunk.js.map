{"version":3,"sources":["Components/SortingMethods/changeButtons.js","Components/SortingMethods/selectionSort.js","Components/SortingMethods/mergeSort.js","Components/SortingMethods/bubbleSorting.js","Components/SortingMethods/QuickSort.js","Components/Home.js","Components/SortingMethods/changeColor.js","Pages/index.js","Pages/AboutPage/About.js","Pages/Contact/Contact.js","Pages/Algorithms/Algorithms.js","App.js","serviceWorker.js","index.js"],"names":["changeButtonsToTrue","buttons","document","getElementsByClassName","slider","option","getElementsByTagName","selected","getElementById","button","style","backgroundColor","color","disabled","s","display","changeButtonsToFalse","changeColor","animations","speed","newAnimations","i","length","j","push","comparison","arrayBar","swap","barOne","barTwo","barOneStyle","barTwoStyle","setTimeout","temp","height","temp2","innerHTML","mergeSort","array","a","auxiliaryArray","slice","mergeHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","merge","arrayLength","arraybar","newHeight","val","len","returnHeight","quickSort","quickSortHelper","start","end","pivotIdx","pivot","comparision","Partition","animate","Home","props","state","sliderRange","minRange","maxRange","clicked","algo","speedOfAlgo","getSliderValue","bind","selectionSort","insertionSorting","mergeSorting","returnWidth","bubbleSorting","changeSpeed","this","generateNewArray","e","preventDefault","setState","target","value","console","log","min","max","curEle","counter","random","indexOf","round","tmp","animaiton","animationComparison","animationSwap","animation","stateArray","sorted","className","href","to","map","key","width","type","name","onChange","onClick","id","Component","Index","AboutPage","ContactPage","handleInputChange","event","handleSubmit","email","message","onSubmit","htmlFor","required","rows","AlgorithmsPage","App","path","About","AlgorithmPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.78444271.chunk.js","sourcesContent":["export const changeButtonsToTrue = ()=>{\n    const buttons = document.getElementsByClassName(\"sortingButton\")\n    const slider = document.getElementsByClassName(\"slider\")\n    var option = document.getElementsByTagName(\"option\")\n    let selected = document.getElementById(\"select-selected\")\n    for(let button of buttons){\n        button.style.backgroundColor = \"red\"\n        button.style.color = \"black\"\n        button.disabled = true\n    }\n    let s = document.getElementsByTagName(\"select\")\n    \n    //console.log(selected)\n    slider[1].disabled = true\n    s[0].style.display = \"none\"\n    selected.disabled = true\n    for(let op of option){\n        op.disabled = true\n    }\n    slider.disabled = true\n}\n\n\nexport const changeButtonsToFalse = ()=>{\n    const buttons = document.getElementsByClassName(\"sortingButton\")\n    const slider = document.getElementsByClassName(\"slider\")\n    var option = document.getElementsByTagName(\"option\")\n    let selected = document.getElementById(\"select-selected\")\n    let s = document.getElementsByTagName(\"select\")\n    \n    //console.log(selected)\n    s[0].style.display = \"inline\"\n    for(let button of buttons){\n        button.style.backgroundColor = \"darkolivegreen\"\n        button.style.color = \"white\"\n        button.disabled = false\n    }\n    selected.disabled = false\n    for(let op of option){\n        op.disabled = false\n    }\n    slider[1].disabled = false\n}","import {changeButtonsToFalse, changeButtonsToTrue} from './changeButtons'\n\nexport const selectionSort = (array, speed) =>{\n  changeButtonsToTrue()\n  let min = 0\n  let tmp = 0\n  let len = array.length\n  let animations = []\n  let j = 0\n  for(var i=0; i < len-1 ; i++){\n    min = i\n    j = i+1\n    let animaiton = []\n    let animationComparison = {}\n    for( j = i+1; j<len; j++){\n      animationComparison = {comparison : [i, j]}\n      animaiton.push(animationComparison)\n      if(array[j] < array[min]){\n        min = j\n      }\n    }\n    \n    let animationSwap = {swap : [min, i]}\n    animaiton.push(animationSwap)\n    animations.push(animaiton)\n    tmp = array[i]\n    array[i] = array[min]\n    array[min] = tmp\n    \n  }\n  changeColor(animations, speed)\n}\n\n const changeColor = (animations, speed) =>{\n  let newAnimations = []\n\n  for(let i = 0; i<animations.length; i++){\n      for(let j = 0; j<animations[i].length; j++){\n        const swapControl = j!== animations[i].length-1\n        if(swapControl){\n          newAnimations.push(animations[i][j].comparison)\n          newAnimations.push(animations[i][j].comparison)\n        }else{\n          newAnimations.push(animations[i][j])\n        }\n      }\n  }\n  \n  const arrayBar = document.getElementsByClassName(\"array-bar\")\n  for(let i = 0; i<newAnimations.length; i++){\n      \n      if(!(newAnimations[i].swap)){\n        let [barOne, barTwo] = newAnimations[i]\n          let barOneStyle = arrayBar[barOne].style\n          let barTwoStyle = arrayBar[barTwo].style\n          const color = i%3 === 0 ? 'red' :'turquoise'\n          setTimeout(() => {\n              barOneStyle.backgroundColor = color\n              barTwoStyle.backgroundColor = color\n          }, i*speed);\n      }else{\n        let [barOne, barTwo] = newAnimations[i].swap\n              let barOneStyle = arrayBar[barOne].style\n              let barTwoStyle = arrayBar[barTwo].style\n              setTimeout(() => {\n                barOneStyle.backgroundColor = 'turquoise'\n              barTwoStyle.backgroundColor = 'turquoise'\n              let temp = barOneStyle.height\n              barOneStyle.height = barTwoStyle.height\n              barTwoStyle.height = temp\n              let temp2 = arrayBar[barOne].innerHTML\n              arrayBar[barOne].innerHTML = arrayBar[barTwo].innerHTML\n              arrayBar[barTwo].innerHTML = temp2\n              if((i+1) === newAnimations.length){\n                changeButtonsToFalse()\n            }\n              }, i*speed);\n      }\n  }\n}\n","import {changeButtonsToFalse, changeButtonsToTrue} from './changeButtons'\n\nexport const mergeSort = async (array, speed) =>{\n    changeButtonsToTrue()\n    let animations = []\n    const auxiliaryArray = array.slice();\n    mergeHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n    changeColor(animations, speed, array.length)\n}\n\nfunction mergeHelper(mainArray,\n    startIdx,\n    endIdx,\n    auxiliaryArray,\n    animations,){\n    \n    if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  merge (mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction merge(\n    mainArray,\n    startIdx,\n    middleIdx,\n    endIdx,\n    auxiliaryArray,\n    animations,\n  ){\n    let k = startIdx\n    let i = startIdx\n    let j = middleIdx+1\n\n    while( i <= middleIdx && j <= endIdx ){\n        animations.push([i, j])\n        animations.push([i, j])\n        if(auxiliaryArray[i] <= auxiliaryArray[j]){\n            animations.push([k, auxiliaryArray[i]]);\n            mainArray[k++] = auxiliaryArray[i++];\n        }else{\n            animations.push([k, auxiliaryArray[j]]);\n            mainArray[k++] = auxiliaryArray[j++];\n        }\n    }\n\n    while( i <= middleIdx){\n        animations.push([i, i])\n        animations.push([i, i])\n        animations.push([k, auxiliaryArray[i]]);\n        mainArray[k++] = auxiliaryArray[i++];\n    }\n\n    while( j <= endIdx){\n        animations.push([j, j])\n        animations.push([j, j])\n        animations.push([k, auxiliaryArray[j]])\n        mainArray[k++] = auxiliaryArray[j++]\n    }\n\n}\n\n function  changeColor(newAnimations, speed, arrayLength){\n\n    for(let i = 0; i< newAnimations.length ; i++){\n        const arraybar = document.getElementsByClassName(\"array-bar\")\n        const colorCondition = i%3 !== 2\n        if(colorCondition){\n            let [barOne, barTwo] = newAnimations[i]\n            const barOneStyle = arraybar[barOne].style\n            const barTwoStyle = arraybar[barTwo].style\n            const color = i % 3 === 0 ? \"red\" : \"turquoise\";\n            setTimeout(() => {\n                barOneStyle.backgroundColor = color\n                barTwoStyle.backgroundColor = color\n            }, i*speed)\n        }else{\n            setTimeout(() => {\n                const [barOne , newHeight] = newAnimations[i]\n                const barOneStyle = arraybar[barOne].style\n                if(arraybar[barOne].innerHTML !== ''){\n                    arraybar[barOne].innerHTML = newHeight\n                }\n                barOneStyle.height = returnHeight(newHeight, arrayLength)+\"px\"\n                if((i+1) === newAnimations.length){\n                    changeButtonsToFalse()\n                }\n            }, i*speed);\n        }\n    }\n}\n\nfunction returnHeight(val, len){\n    if(len <= 25){\n        return val*16\n    }\n    else if(len < 40){\n        return val*8\n    }else if(len > 40 && len <50){\n        return val*5\n    }else if(len > 50 && len <70){\n        return val*4\n    }else if(len > 70 && len <90){\n        return val*4\n    }else if(len > 90 && len <110){\n        return val*2\n    }else if(len > 110 && len <130){\n        return val\n    }else if(len > 130 && len <150){\n        return val\n    }else if(len > 150 && len <300){\n        return val\n    }\n}","export const bubbleSorting = (stateArray) =>{\n\n    let sorted = false\n    let animations = []\n    while(!sorted){\n        sorted = true\n        \n        for(let i = 0; i<stateArray.length-1; i++ ){\n            let animationComparison = {comparison : [i, i+1]}\n            let animationSwap = {}\n            if(stateArray[i] > stateArray[i+1]){\n                animationSwap = {swap : [i, i+1]}\n                let temp = stateArray[i+1]\n                stateArray[i+1] = stateArray[i]\n                stateArray[i] = temp\n                sorted = false\n            }else{\n                animationSwap = {swap: \"no swap\"}\n            }\n            animations.push([animationComparison, animationSwap])\n        }\n    }\n    return animations\n}   \n","import {changeButtonsToFalse, changeButtonsToTrue} from './changeButtons'\n\nexport const quickSort = (array, speed) =>{\n    let animations = []\n\n    quickSortHelper(array, 0, array.length-1, animations)\n    animate(animations, speed)\n}\n\nfunction quickSortHelper(array, start, end, animations){\n    if(start < end){\n        let pivotIdx = Partition(array, start, end, animations)\n        quickSortHelper(array, start, pivotIdx-1, animations)\n        quickSortHelper(array, pivotIdx+1, end, animations)\n    }\n}\n\nfunction Partition(array, start, end, animations){\n    let pivot = array[end]\n    let pivotIdx = start\n\n    for(let i = start; i<end; i++){\n        animations.push({comparision : [i, end]})\n        animations.push({comparision : [i, end]})\n        if( array[i] <= pivot ){\n            animations.push({swap : [i, pivotIdx]})\n            let temp = array[pivotIdx]\n            array[pivotIdx] = array[i]\n            array[i] = temp\n            pivotIdx++\n        }\n    }\n\n    animations.push({comparision : [pivotIdx, end]})\n    animations.push({comparision : [pivotIdx, end]})\n    animations.push({swap : [pivotIdx, end]})\n    let temp = array[pivotIdx]\n    array[pivotIdx] = array[end]\n    array[end] = temp\n    return pivotIdx\n}\n\nfunction animate(animations, speed){\n    changeButtonsToTrue()\n    for(let i = 0; i<animations.length; i++){\n        const arrayBar = document.getElementsByClassName(\"array-bar\")\n        if(animations[i].comparision){\n            let [barOne, barTwo] = animations[i].comparision\n            const barOneStyle = arrayBar[barOne].style\n            const barTwoStyle = arrayBar[barTwo].style\n            setTimeout(() => {\n                barOneStyle.backgroundColor = 'red'\n                barTwoStyle.backgroundColor = 'turquoise'\n            }, setTimeout(() => {\n                barOneStyle.backgroundColor = 'turquoise'\n                barTwoStyle.backgroundColor = 'red'\n            }, i*speed));\n            \n        }else{\n            let [barOne, barTwo] = animations[i].swap\n            const barOneStyle = arrayBar[barOne].style\n            const barTwoStyle = arrayBar[barTwo].style\n            setTimeout(() => {\n                let temp = barOneStyle.height\n                barOneStyle.height = barTwoStyle.height\n                barTwoStyle.height = temp\n                let temp2 = arrayBar[barOne].innerHTML\n              arrayBar[barOne].innerHTML = arrayBar[barTwo].innerHTML\n              arrayBar[barTwo].innerHTML = temp2\n              barTwoStyle.backgroundColor = 'turquoise'\n              barOneStyle.backgroundColor = 'turquoise'\n              if((i+1) === animations.length){\n                changeButtonsToFalse()\n            }\n            }, i*speed);\n        }\n    }\n}","import React, {Component} from 'react'\nimport '../index.css'\nimport { Link } from 'react-router-dom'\n\nimport {selectionSort} from './SortingMethods/selectionSort'\nimport {changeColor} from './SortingMethods/changeColor'\nimport {mergeSort} from './SortingMethods/mergeSort'\nimport {bubbleSorting} from './SortingMethods/bubbleSorting'\nimport { quickSort } from './SortingMethods/QuickSort'\n\nexport default class Home extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            array:[],\n            sliderRange:10,\n            minRange:10,\n            maxRange:300,\n            clicked: false,\n            algo: '',\n            speedOfAlgo:3\n        }\n\n        this.getSliderValue = this.getSliderValue.bind(this)\n        this.selectionSort = this.selectionSort.bind(this)\n        this.insertionSorting = this.mergeSorting.bind(this)\n        this.returnHeight = this.returnHeight.bind(this)\n        this.returnWidth = this.returnWidth.bind(this)\n        this.bubbleSorting = this.bubbleSorting.bind(this)\n        this.changeSpeed = this.changeSpeed.bind(this)\n        this.quickSort = this.quickSort.bind(this)\n    }\n\n    componentDidMount(){\n        this.generateNewArray()\n    }\n\n    getSliderValue(e){\n        e.preventDefault()\n        this.setState({\n            sliderRange:e.target.value\n        })\n        this.generateNewArray()\n        \n    }\n\n    changeSpeed(e){\n        console.log(\"hello\")\n        this.setState({\n            speedOfAlgo:e.target.value\n        })\n    }\n\n    generateNewArray(){\n        let array = []\n        let curEle =0\n        let counter = 2\n        for(let i=1; i<=this.state.sliderRange; i++){\n                curEle = randomNumber(this.state.minRange, this.state.sliderRange)\n                if(array.indexOf(curEle) !== -1){\n                    curEle = Math.round(Math.random()*counter)\n                    array.push(curEle)\n                    counter = counter+1\n                }else{\n                    array.push(curEle)\n                }\n        }\n        this.setState({\n            array:array\n        })\n    }\n    \n    selectionSort(){\n        selectionSort(this.state.array, this.state.speedOfAlgo)\n        \n    }\n\n    mergeSorting(){\n        mergeSort(this.state.array, this.state.speedOfAlgo)\n    }\n\n    bubbleSorting(){\n        let animations = bubbleSorting(this.state.array)\n        changeColor(animations, this.state.speedOfAlgo)\n    }\n\n    quickSort(){\n        quickSort(this.state.array, this.state.speedOfAlgo)\n    }\n\n\n    returnHeight(val){\n        if(this.state.array.length < 20){\n            return val*16\n        }\n        else if(this.state.array.length < 40){\n            return val*8\n        }else if(this.state.array.length > 40 && this.state.array.length <50){\n            return val*5\n        }else if(this.state.array.length > 50 && this.state.array.length <70){\n            return val*4\n        }else if(this.state.array.length > 70 && this.state.array.length <90){\n            return val*4\n        }else if(this.state.array.length > 90 && this.state.array.length <110){\n            return val*2\n        }else if(this.state.array.length > 110 && this.state.array.length <130){\n            return val\n        }else if(this.state.array.length > 130 && this.state.array.length <150){\n            return val\n        }else if(this.state.array.length > 150 && this.state.array.length <300){\n            return val\n        }\n    }\n\n    returnWidth(){\n        if(this.state.array.length < 20){\n            return 60\n        }\n        else if(this.state.array.length < 40){\n            return 25\n        }else if(this.state.array.length > 40 && this.state.array.length <50){\n            return 20\n        }else if(this.state.array.length > 50 && this.state.array.length <70){\n            return 15\n        }else if(this.state.array.length > 70 && this.state.array.length <90){\n            return 11\n        }else if(this.state.array.length > 90 && this.state.array.length <110){\n            return 9\n        }else if(this.state.array.length > 110 && this.state.array.length <130){\n            return 7\n        }else if(this.state.array.length > 130 && this.state.array.length <150){\n            return 4\n        }else if(this.state.array.length > 150 && this.state.array.length <300){\n            return 2\n        }\n    }\n\n    render(){\n\n        return(\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"#\">Sorting Visualizer</a>\n          <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/algorithm\">Algorithms</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/visualizer\">Visualizer</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n                <center><h1>Sorting Algorithms Visualizer</h1></center>\n                <div className=\"array-container\">\n                    {this.state.array.map((value, i)=>{\n                        return(\n                            <div key = {i}\n                            className=\"array-bar\"\n                            style={{height:`${this.returnHeight(value)}px`,width:`${this.returnWidth()}px`}}\n                            >{this.state.array.length < 30 ? value : ''}</div>\n                        )\n                    })}\n                </div>\n\n                <div className=\"slider\">\n                    <b>Pick your Range</b>\n                    <input type=\"range\" min={this.state.minRange} max={this.state.maxRange} name=\"rangePicker\" className=\"slider\" onChange={this.getSliderValue}/>\n                    <button className=\"sortingButton\"  onClick={()=>this.generateNewArray()}> Generate New Array </button>\n                    <button disabled = { this.state.clicked ? true : false}  className=\"sortingButton\" value=\"Selection Sort\" onClick={()=>{this.selectionSort()}}>Sort by Slection Sort</button>\n                    <button disabled = { this.state.clicked ? true : false}  className=\"sortingButton\" value=\"Merge Sort\" onClick={()=>{this.mergeSorting()}}>Sort by Merge Sort</button>\n                    <button disabled = { this.state.clicked ? true : false}  className=\"sortingButton\" value=\"Bubble Sort\" onClick={()=>{this.bubbleSorting()}}>Sort by Bubble Sort</button>\n                    <button disabled = { this.state.clicked ? true : false}  className=\"sortingButton\" value=\"Quick Sort\" onClick={()=>{this.quickSort()}}>Sort by Quick Sort</button>\n                    <label>Speed : </label>\n                    <select onClick={(e)=>this.changeSpeed(e)} id=\"select-selected\" style={{width:'100px'}}>\n                        <option value=\"3\">Fast</option>\n                        <option value=\"10\">Medium</option>\n                        <option value=\"30\">Slow</option>\n                    </select>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nfunction randomNumber(min, max){\n    return Math.floor((Math.random() * (max-min+1)+min)*1.65)\n}","import {changeButtonsToFalse, changeButtonsToTrue} from './changeButtons'\n\nexport const  changeColor = (animations, speed)=>{\n    changeButtonsToTrue()\n    let newAnimations = []\n\n    for(let animation of animations){\n        newAnimations.push(animation[0].comparison)\n        newAnimations.push(animation[0].comparison)\n        newAnimations.push(animation[1].swap)\n    }\n    \n    for(let i = 0; i<newAnimations.length; i++){\n        const arrayBar = document.getElementsByClassName(\"array-bar\")\n        const colorChange = i % 3 !== 2\n        \n        if(colorChange){\n            let [barOne, barTwo] = newAnimations[i]\n            let barOneStyle = arrayBar[barOne].style\n            let barTwoStyle = arrayBar[barTwo].style\n            const color = i%3 === 0 ? 'red' :'turquoise'\n            setTimeout(() => {\n                barOneStyle.backgroundColor = color\n                barTwoStyle.backgroundColor = color\n                barOneStyle = 'turquoise'\n            }, i*speed);\n        }else{\n            if(!(newAnimations[i] === 'no swap')){\n                let [barOne, barTwo] = newAnimations[i]\n                let barOneStyle = arrayBar[barOne].style\n                let barTwoStyle = arrayBar[barTwo].style\n                setTimeout(() => {\n                let temp = barOneStyle.height\n                barOneStyle.height = barTwoStyle.height\n                barTwoStyle.height = temp\n                let temp2 = arrayBar[barOne].innerHTML\n                arrayBar[barOne].innerHTML = arrayBar[barTwo].innerHTML\n                arrayBar[barTwo].innerHTML = temp2\n                if((i+1) === newAnimations.length){\n                    changeButtonsToFalse()\n                }\n                }, i*speed);\n            }  \n        }\n        \n    }\n\n    \n  \n}\n","import React, { Component } from \"react\";\n\nimport { Link } from 'react-router-dom';\n\nexport default class Index extends Component{\n    render(){\n        return (\n            <div>\n              <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"Index.html\">Sorting Visualizer</a>\n                <div className=\"collapse navbar-collapse\">\n                  <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/\">Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/about\">About</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/visualizer\">Visualizer</Link>\n                    </li>\n                    <li>\n                        <Link className=\"nav-link\" to=\"/algorithm\">Algorithms</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/contact\">Contact Us</Link>\n                    </li>\n                  </ul>\n                </div>\n              </nav>\n      \n              <div className=\"container\">\n                <h1 className=\"mt-5\">Welcome to Sorting Visualizer</h1>\n                <p>This application helps you understand sorting algorithms through visualization.</p>\n              </div>\n      \n              <footer className=\"bg-light text-center text-lg-start\">\n                <div className=\"text-center p-3\">\n                  © 2024 Sorting Visualizer | \n                  <a href=\"https://www.linkedin.com/in/karandeep-kamboj-32308a231/\">Karandeep Kamboj</a>\n                </div>\n              </footer>\n            </div>\n          );\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass AboutPage extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"#\">Sorting Visualizer</a>\n          <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/algorithm\">Algorithms</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/visualizer\">Visualizer</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n\n        <div className=\"container\">\n          <h1 className=\"mt-5\">About Sorting Visualizer</h1>\n          <p>Welcome to the Sorting Visualizer project! This project is designed to help users understand various sorting algorithms through visual representation. Sorting algorithms are fundamental in computer science and are often used to introduce key concepts in programming and algorithm design.</p>\n\n          <h2>Purpose</h2>\n          <p>The main purpose of this Sorting Visualizer is to provide an interactive and educational tool for learning and teaching sorting algorithms. By visualizing the steps of each algorithm, users can gain a deeper understanding of how they work and their efficiency.</p>\n\n          <h2>Features</h2>\n          <ul>\n            <li>Visualize various sorting algorithms, including Bubble Sort, Selection Sort, Insertion Sort, Quick Sort, and Merge Sort.</li>\n            <li>Generate new arrays to visualize sorting with different datasets.</li>\n            <li>Adjust the speed of visualization for better understanding.</li>\n            <li>Compare the performance of different sorting algorithms.</li>\n          </ul>\n\n          <h2>How It Works</h2>\n          <p>The Sorting Visualizer uses HTML, CSS, and JavaScript to create an interactive experience. Users can select a sorting algorithm, generate a new array, and watch the sorting process step by step. The visualization helps to illustrate the inner workings of each algorithm, making it easier to understand their behavior and performance.</p>\n\n          <h2>Team</h2>\n          <p>This project was developed by:</p>\n          <ul>\n            <li><a href=\"https://www.linkedin.com/in/karandeep-kamboj-32308a231/\">Karandeep Kamboj</a></li>\n          </ul>\n        </div>\n\n        <footer className=\"bg-light text-center text-lg-start\">\n          <div className=\"text-center p-3\">\n            © 2024 Sorting Visualizer | \n            <a href=\"https://www.linkedin.com/in/karandeep-kamboj-32308a231/\">Karandeep Kamboj</a>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nclass ContactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: ''\n    };\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // Handle form submission logic here\n    console.log('Form submitted:', this.state);\n    // Clear form after submission\n    this.setState({\n      name: '',\n      email: '',\n      message: ''\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"#\">Sorting Visualizer</a>\n          <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/algorithm\">Algorithms</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/visualizer\">Visualizer</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n\n        <div className=\"container\">\n          <h1 className=\"mt-5\">Contact Us</h1>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email address</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"email\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"message\">Message</label>\n              <textarea\n                className=\"form-control\"\n                id=\"message\"\n                name=\"message\"\n                rows=\"4\"\n                value={this.state.message}\n                onChange={this.handleInputChange}\n                required\n              ></textarea>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </div>\n\n        <footer className=\"bg-light text-center text-lg-start\">\n          <div className=\"text-center p-3\">\n            © 2024 Sorting Visualizer | \n            <a href=\"https://www.linkedin.com/in/karandeep-kamboj-32308a231/\">Karandeep Kamboj</a>   \n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default ContactPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass AlgorithmsPage extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"#\">Sorting Visualizer</a>\n          <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/algorithm\">Algorithms</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/visualizer\">Visualizer</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n\n        <div className=\"container\">\n          <h1 className=\"mt-5\">Sorting Algorithms</h1>\n          <h2>Bubble Sort</h2>\n          <p>Bubble Sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order. The pass through the list is repeated until the list is sorted.</p>\n\n          <h2>Selection Sort</h2>\n          <p>Selection Sort divides the input list into two parts: a sorted sublist of items which is built up from left to right and a sublist of the remaining unsorted items. The algorithm proceeds by finding the smallest element in the unsorted sublist, exchanging it with the leftmost unsorted element, and moving the sublist boundaries one element to the right.</p>\n\n          <h2>Insertion Sort</h2>\n          <p>Insertion Sort builds the final sorted array one item at a time. It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort.</p>\n\n          <h2>Quick Sort</h2>\n          <p>Quick Sort is an efficient, in-place sorting algorithm that in practice is faster than merge sort and heapsort. However, it is not a stable sort, meaning that the relative order of equal sort items is not preserved.</p>\n\n          <h2>Merge Sort</h2>\n          <p>Merge Sort is an efficient, stable, comparison-based, divide and conquer sorting algorithm. Most implementations produce a stable sort, meaning that the implementation preserves the input order of equal elements in the sorted output.</p>\n        </div>\n\n        <footer className=\"bg-light text-center text-lg-start\">\n          <div className=\"text-center p-3\">\n            © 2024 Sorting Visualizer | \n            <a href=\"https://www.linkedin.com/in/karandeep-kamboj-32308a231/\">Karandeep Kamboj</a>   \n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default AlgorithmsPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './Components/Home';\nimport Index from './Pages';\nimport About from './Pages/AboutPage/About';\nimport ContactPage from './Pages/Contact/Contact';\nimport AlgorithmPage from './Pages/Algorithms/Algorithms'\n\nfunction App() {\n  return (\n    \n    <Router>\n      <div>\n      <Routes>\n          <Route path=\"/\" Component={Index}/>\n          <Route path=\"/visualizer\" Component={Home} />\n          <Route path=\"/about\" Component={About}/>\n          <Route path=\"/contact\" Component={ContactPage}/>\n          <Route path=\"/algorithm\" Component={AlgorithmPage}/>\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}